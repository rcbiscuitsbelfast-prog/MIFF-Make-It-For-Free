#!/usr/bin/env node

/**
 * Toppler Generation Stub Script
 * Purpose: Bypass visual generation in CI workflow while maintaining orchestration replay
 * Recovery Method: Drop-only stub with modular hook system
 */

const fs = require('fs');
const path = require('path');

console.log('🎯 [gen-toppler-stub] Starting Toppler generation bypass...');

// Create the stub file
const stubContent = {
  "topplerStubId": "ci_workflow_toppler_bypass",
  "purpose": "Simulate Toppler HTML output for CI workflow bypass",
  "generationTimestamp": new Date().toISOString(),
  "status": "stub_generated",
  "htmlOutput": {
    "filePath": "games/toppler/toppler.html",
    "contentType": "standalone_html",
    "generationMethod": "stub_simulation"
  },
  "ciIntegration": {
    "buildStep": "bypassed",
    "visualGeneration": "simulated",
    "orchestrationReplay": "enabled",
    "typeChecks": "enabled",
    "tests": "enabled"
  }
};

// Ensure the directory exists
const outDir = path.resolve(process.cwd(), 'games/toppler');
if (!fs.existsSync(outDir)) {
  fs.mkdirSync(outDir, { recursive: true });
  console.log('📁 [gen-toppler-stub] Created directory:', outDir);
}

// Write the stub file
const stubPath = path.join(outDir, 'toppler_stub.json');
fs.writeFileSync(stubPath, JSON.stringify(stubContent, null, 2), 'utf8');
console.log('✅ [gen-toppler-stub] Wrote stub file:', stubPath);

// Create a minimal HTML file for CI compatibility
const htmlContent = `<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Toppler - Stub Generated</title>
    <style>
      html, body { margin: 0; padding: 0; background: #0b0b0b; height: 100%; }
      body { display: flex; align-items: center; justify-content: center; color: #aaa; font-family: system-ui, sans-serif; }
      .stub-notice { text-align: center; padding: 20px; }
    </style>
  </head>
  <body>
    <div class="stub-notice">
      <h2>🎯 Toppler Stub Generated</h2>
      <p>Visual generation bypassed for CI workflow</p>
      <p>Orchestration replay: ✅ ENABLED</p>
      <p>Type checks: ✅ ENABLED</p>
      <p>Tests: ✅ ENABLED</p>
      <p><small>Generated by gen-toppler-stub at ${new Date().toISOString()}</small></p>
    </div>
  </body>
</html>`;

const htmlPath = path.join(outDir, 'toppler.html');
fs.writeFileSync(htmlPath, htmlContent, 'utf8');
console.log('✅ [gen-toppler-stub] Wrote HTML stub:', htmlPath);

// Log success message
console.log('🎉 [gen-toppler-stub] Toppler generation bypass completed successfully!');
console.log('📊 [gen-toppler-stub] Status: Visual generation bypassed, CI workflow enabled');
console.log('🔧 [gen-toppler-stub] Next: Proceed with type checks, tests, and orchestration validation');
console.log('🚀 [gen-toppler-stub] Visual generation will be hot-loaded post-CI via modular hooks');

// Exit with success
process.exit(0);